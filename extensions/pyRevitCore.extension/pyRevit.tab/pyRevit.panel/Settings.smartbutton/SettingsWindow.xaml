<!--https://stackoverflow.com/questions/6850713/weird-xaml-parsing-error-when-trying-to-set-textbox-isreadonly-->
<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        Title="{DynamicResource Title}"
        Height="800" Width="710" MinWidth="600" MinHeight="700"
        ShowInTaskbar="False" ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterScreen" HorizontalContentAlignment="Center">
    <Window.Resources>
        <s:Boolean x:Key="BooleanTrue">True</s:Boolean>

        <Style x:Key="AnimatedSwitch" TargetType="{x:Type ToggleButton}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="#FAFAFB" />
            <Setter Property="BorderBrush" Value="#CCCCCC" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Viewbox Stretch="Uniform">
                            <Canvas Name="Layer_1" Width="20" Height="20" Canvas.Left="10" Canvas.Top="0">
                                <Ellipse  Canvas.Left="0" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                                <Ellipse  Canvas.Left="15" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                                <Border Canvas.Left="10" Width="15" Height="20" Name="rect416927" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1"/>
                                <Ellipse x:Name="ellipse"  Canvas.Left="0" Width="20" Height="20" Fill="White" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform X="0" Y="0" />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Canvas>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True" >
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#2c3e50" Duration="0:0:0.2" />
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#1e2b38" Duration="0:0:0.2" />
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="15" KeySpline="0, 1, 0.6, 1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FAFAFB" Duration="0:0:0.2" />
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#CCCCCC" Duration="0:0:0.2" />
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="15"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" KeySpline="0, 0.5, 0.5, 1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="IsReadOnly" Value="{StaticResource BooleanTrue}">
                    <Setter Property="Background" Value="#d4d9d0" />
                    <Setter Property="Foreground" Value="#4f693a" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RevitCheckbox" TargetType="{x:Type CheckBox}">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="revitTab" TargetType="{x:Type TabItem}">
            <Setter Property="Template" Value="{DynamicResource revitTabTemplate}" />
        </Style>

        <ControlTemplate x:Key="revitTabTemplate" TargetType="{x:Type TabItem}">
            <Border Height="20" SnapsToDevicePixels="True"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}">
                <TextBlock Text="{TemplateBinding Header}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
        </ControlTemplate>

        <ItemsPanelTemplate x:Key="swatchPanel">
            <WrapPanel />
        </ItemsPanelTemplate>

        <Style x:Key="swatchPanelItem" TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Name="Border" Padding="1" SnapsToDevicePixels="true" Background="Transparent" BorderThickness="1">
                            <Border Width="18" Height="18" Background="{Binding Brush}" BorderThickness="0"></Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="0" />
        </Style>

        <Canvas x:Key="engineIcon">
            <Path Canvas.Top="-5" Canvas.Left="0"
                  Data="M8,10H16V18H11L9,16H7V11M7,4V6H10V8H7L5,10V13H3V10H1V18H3V15H5V18H8L10,20H18V16H20V19H23V9H20V12H18V8H12V6H15V4H7Z"
                  Fill="{DynamicResource pyRevitDarkBrush}">
                <Path.LayoutTransform>
                    <ScaleTransform ScaleX="1.7" ScaleY="1.7" />
                </Path.LayoutTransform>
            </Path>
        </Canvas>

        <Canvas x:Key="filterIcon">
            <Path Canvas.Top="-14" Canvas.Left="-14"
                  Data="F1 M 45.4403,56.9637L 45.4403,55.0463L 52.8201,44.5143L 52.8201,44.4237L 46.13,44.4237L 46.13,41.4774L 57.372,41.4774L 57.372,43.5352L 50.1532,53.9265L 50.1532,54.0174L 57.4869,54.0174L 57.4869,56.9637L 45.4403,56.9637 Z M 34.8333,61.75L 34.8333,42.75L 19,20.5833L 57,20.5833L 41.1667,42.75L 41.1667,58.5833L 34.8333,61.75 Z M 25.903,52.8055L 21.4072,52.8055L 20.289,56.9855L 16.6085,56.9855L 21.4072,41.4556L 26.0661,41.4556L 30.9337,56.9855L 27.1143,56.9855L 25.903,52.8055 Z M 21.9196,50.2801L 25.3905,50.2801L 24.4122,46.9804L 23.9987,45.4806L 23.6201,43.981L 23.5736,43.981L 23.2212,45.4941L 22.8514,47.0194L 21.9196,50.2801 Z "
                  Fill="Black">
                <Path.LayoutTransform>
                    <ScaleTransform ScaleX="0.36"  ScaleY="0.36"/>
                </Path.LayoutTransform>
            </Path>
        </Canvas>
    </Window.Resources>
    <DockPanel>
        <Grid Background="{DynamicResource pyRevitDarkBrush}" DockPanel.Dock="Bottom">
            <WrapPanel HorizontalAlignment="Right">
                <Button x:Name="save_b" Background="White" Content="{DynamicResource JustSave}" Click="save_settings" Width="150" Margin="10,10,10,10" Height="24"/>
                <Button x:Name="savereload_b" Background="White" Content="{DynamicResource SaveAndReload}" Click="save_settings_and_reload" Width="200" Margin="10,10,10,10" Height="24"/>
            </WrapPanel>
        </Grid>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <Expander Header="{DynamicResource CoreSettings.Title}" IsExpanded="False" Margin="10px">
                    <StackPanel Margin="10px">
                        <GroupBox Header="{DynamicResource CoreSettings.General}">
                            <StackPanel>
                                <WrapPanel Margin="10,15,0,5">
                                    <ToggleButton Style="{StaticResource AnimatedSwitch}" Height="24" x:Name="rocketmode_cb" IsChecked="False"/>
                                    <TextBlock Margin="30,4,0,0" Text="{DynamicResource CoreSettings.RocketMode}"/>
                                </WrapPanel>
                                <TextBlock TextWrapping="WrapWithOverflow" Margin="65,0,10,10" Text="{DynamicResource CoreSettings.RocketMode.Description}"/>
                                <WrapPanel Margin="10,10,0,10">
                                    <ToggleButton Style="{StaticResource AnimatedSwitch}" Height="24" x:Name="checkupdates_cb" IsChecked="False"/>
                                    <TextBlock Margin="30,4,0,0" Text="{DynamicResource CoreSettings.CheckUpdates}"/>
                                </WrapPanel>
                                <TextBlock TextWrapping="WrapWithOverflow" Margin="65,0,10,10" Text="{DynamicResource CoreSettings.CheckUpdates.Description}"/>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="{DynamicResource CoreSettings.Engines}" Margin="0,10,0,0">
                            <StackPanel>
                                <DockPanel Margin="10,10,0,0" >
                                    <ContentControl Content="{StaticResource engineIcon}"
                                                    Width="32" Height="32" VerticalAlignment="Center"
                                                    DockPanel.Dock="Left">
                                        <ContentControl.LayoutTransform>
                                            <ScaleTransform ScaleX="1"  ScaleY="1"/>
                                        </ContentControl.LayoutTransform>
                                    </ContentControl>
                                    <TextBlock Margin="20,0,10,0" VerticalAlignment="Center" DockPanel.Dock="Left" Text="{DynamicResource CoreSettings.ActiveEngine}"/>
                                    <ComboBox x:Name="availableEngines" Margin="0,0,10,0"
                                              DisplayMemberPath="name" Height="24"
                                              VerticalContentAlignment="Center"/>
                                </DockPanel>
                                <DockPanel Margin="42,5,0,10" >
                                    <TextBlock Margin="20,0,10,0" VerticalAlignment="Center" DockPanel.Dock="Left" Text="{DynamicResource CoreSettings.ActiveCPythonEngine}"/>
                                    <ComboBox x:Name="cpythonEngines" Margin="0,0,10,0"
                                              DisplayMemberPath="name" Height="24"
                                              VerticalContentAlignment="Center"/>
                                </DockPanel>
                                <StackPanel Margin="10,5,10,10">
                                    <TextBlock FontWeight="Medium" Text="{DynamicResource CoreSettings.UsingCPython}"/>
                                    <TextBlock TextWrapping="WrapWithOverflow" Margin="0,5,0,0" Text="{DynamicResource CoreSettings.UsingCPython.Description1}"/>
                                    <TextBlock TextWrapping="WrapWithOverflow" Margin="0,5,0,0" Text="{DynamicResource CoreSettings.UsingCPython.Description2}"/>
                                    <TextBlock TextWrapping="WrapWithOverflow" Margin="0,5,0,0" Text="{DynamicResource CoreSettings.UsingCPython.Description3}"/>
                                    <TextBlock TextWrapping="WrapWithOverflow" Margin="0,15,0,0" Text="{DynamicResource CoreSettings.UsingCPython.Description4}"/>
                                    <TextBlock TextWrapping="WrapWithOverflow" Margin="20,5,0,0" FontFamily="Consolas" Text="#! python3" />
                                    <TextBlock TextWrapping="WrapWithOverflow" Margin="0,20,0,0" Text="{DynamicResource CoreSettings.UsingCPython.Description5}"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="{DynamicResource CoreSettings.Development}" Margin="0,10,0,0">
                            <StackPanel>
                                <TextBlock TextWrapping="WrapWithOverflow" Margin="10,10,10,0" Text="{DynamicResource CoreSettings.Development.Description}"/>
                                <WrapPanel Margin="10,10,0,10">
                                    <ToggleButton Style="{StaticResource AnimatedSwitch}" Height="24" x:Name="loadbetatools_cb" IsChecked="False"/>
                                    <TextBlock Margin="30,4,0,0" Text="{DynamicResource CoreSettings.Development.LoadBeta}"/>
                                </WrapPanel>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="{DynamicResource CoreSettings.Caching}" Margin="0,10,0,0">
                            <StackPanel>
                                <TextBlock TextWrapping="WrapWithOverflow" Margin="10,10,10,0" Text="{DynamicResource CoreSettings.Caching.Description}"/>
                                <RadioButton x:Name="bincache_rb" GroupName="cache_type" Margin="10,10,0,5" IsChecked="False" Content="{DynamicResource CoreSettings.BinaryCache}"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Margin="26,0,10,0" Text="{DynamicResource CoreSettings.BinaryCache.Description}"/>

                                <RadioButton x:Name="asciicache_rb" GroupName="cache_type" Margin="10,15,0,5" IsChecked="False" Content="{DynamicResource CoreSettings.ASCIICache}"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Margin="26,0,10,10" Text="{DynamicResource CoreSettings.ASCIICache.Description}"/>

                                <Button Content="{DynamicResource CoreSettings.Caching.Button}" Height="24" Click="resetcache" HorizontalAlignment="Right" Width="{DynamicResource CoreSettings.Caching.Button.With}" Margin="0,10,10,10"/>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </Expander>
                <Separator Margin="10,0,10,0" Background="#dfdfdf"/>
                <Expander Header="{DynamicResource EnvironmentVariables.Title}" IsExpanded="False" Margin="10px">
                    <StackPanel Margin="10px">
                        <TextBlock TextWrapping="WrapWithOverflow" Text="{DynamicResource EnvironmentVariables.Description}"/>
                        <ListView x:Name="envvars_lb" Margin="0,10,0,0" Height="300" FontFamily="Consolas">
                            <ListView.Resources>
                                <ContextMenu x:Key="ItemContextMenu">
                                    <MenuItem x:Name="menuItem_CopyValue"
                                             Click="copy_envvar_value"
                                             Header="Copy Variable Value">
                                    </MenuItem>
                                    <MenuItem x:Name="menuItem_CopyId"
                                             Click="copy_envvar_id"
                                             Header="Copy Variable Name">
                                    </MenuItem>
                                </ContextMenu>
                            </ListView.Resources>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="VerticalContentAlignment" Value="Top" />
                                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="{DynamicResource EnvironmentVariables.ListView.VariableName}" Width="170" DisplayMemberBinding="{Binding Id}"/>
                                    <GridViewColumn Header="{DynamicResource EnvironmentVariables.ListView.VariableValue}" Width="445">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Value}" TextWrapping="Wrap"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </StackPanel>
                </Expander>
                <Separator Margin="10,0,10,0" Background="#dfdfdf"/>
                <Expander Header="{DynamicResource ReportingLevels.Title}" IsExpanded="False" Margin="10px">
                    <Grid Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Image x:Name="lognone" Width="100" Height="50" Grid.Column="0" Grid.Row="0" VerticalAlignment="Top" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                        <Image x:Name="logverbose" Width="100" Height="50" Grid.Column="0" Grid.Row="1" VerticalAlignment="Top" Margin="0,10,0,0" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                        <Image x:Name="logdebug" Width="100" Height="50" Grid.Column="0" Grid.Row="2" VerticalAlignment="Top" Margin="0,10,0,0" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                        <StackPanel Grid.Column="1" Grid.Row="0" Margin="10,0,0,0">
                            <RadioButton x:Name="noreporting_rb" GroupName="reporting_level" IsChecked="True" Content="{DynamicResource ReportingLevels.NoReporting}"/>
                            <TextBlock TextWrapping="WrapWithOverflow" Margin="20,10,0,0" Text="{DynamicResource ReportingLevels.NoReporting.Description}"/>
                        </StackPanel>
                        <StackPanel Grid.Column="1" Grid.Row="1" Margin="10,10,0,0">
                            <RadioButton x:Name="verbose_rb" GroupName="reporting_level" IsChecked="True" Content="{DynamicResource ReportingLevels.Verbose}"/>
                            <TextBlock TextWrapping="WrapWithOverflow" Margin="20,10,0,0" Text="{DynamicResource ReportingLevels.Verbose.Description}"/>
                            <WrapPanel Margin="20,5,0,0">
                                <Label Padding="0" VerticalAlignment="Center" Content="{DynamicResource ReportingLevels.Verbose.Timeout.Start}"/>
                                <TextBox x:Name="startup_log_timeout" Width="48" Height="24"
                                         Margin="5,0,5,0" Padding="5,0,0,0"
                                         IsEnabled="{Binding ElementName=verbose_rb, Path=IsChecked}"
                                         VerticalContentAlignment="Center"/>
                                <Label Padding="0" VerticalAlignment="Center" Content="{DynamicResource ReportingLevels.Verbose.Timeout.Finish}"/>
                            </WrapPanel>
                        </StackPanel>
                        <StackPanel Grid.Column="1" Grid.Row="2" Margin="10,0,0,0">
                            <RadioButton x:Name="debug_rb" GroupName="reporting_level" Margin="0,10,0,0" IsChecked="False" Content="{DynamicResource ReportingLevels.Debug}"/>
                            <TextBlock TextWrapping="WrapWithOverflow" Margin="20,10,0,0" Text="{DynamicResource ReportingLevels.Debug.Description}"/>
                        </StackPanel>
                        <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" Margin="0,10,0,0">
                            <CheckBox x:Name="filelogging_cb" Margin="0,10,0,0" IsChecked="False" Content="{DynamicResource ReportingLevels.FileDebug}"/>
                            <TextBlock TextWrapping="WrapWithOverflow" Margin="20,10,0,0" Text="{DynamicResource ReportingLevels.FileDebug.Description}"/>

                            <Button Content="{DynamicResource ReportingLevels.Button}" Height="24" Click="resetreportinglevel" HorizontalAlignment="Right" Width="{DynamicResource ReportingLevels.Button.Width}" Margin="0,10,10,10"/>
                        </StackPanel>
                    </Grid>
                </Expander>
                <Separator Margin="10,0,10,0" Background="#dfdfdf"/>
                <Expander Header="{DynamicResource StartupChecks.Title}" IsExpanded="False" Margin="10px">
                    <StackPanel Margin="10">
                        <TextBlock TextWrapping="WrapWithOverflow" Text="{DynamicResource StartupChecks.Description}"/>
                        <DockPanel Margin="0,10,0,10">
                            <TextBlock x:Name="requiredhostbuild_t" DockPanel.Dock="Left" VerticalAlignment="Center" Text="{DynamicResource StartupChecks.Build}"/>
                            <Button DockPanel.Dock="Right" Content="{DynamicResource StartupChecks.Build.Button}" Width="{DynamicResource StartupChecks.Build.Button.Width}" Margin="10,0,0,0"
                                            Click="reset_requiredhostbuild" ToolTip="{DynamicResource StartupChecks.Build.Button.ToolTip}"/>
                            <TextBox x:Name="requiredhostbuild_tb" Margin="10,0,0,0" Height="24" Padding="5,0,0,0"
                                     VerticalContentAlignment="Center"/>
                        </DockPanel>
                        <TextBlock TextWrapping="WrapWithOverflow" Text="{DynamicResource StartupChecks.MinimumSpace.Description}"/>
                        <DockPanel Margin="0,10,0,10">
                            <TextBlock DockPanel.Dock="Left" Margin="0,2,0,0" Text="{DynamicResource StartupChecks.MinimumSpace}"/>
                            <TextBox x:Name="minhostdrivefreespace_tb"
                                     Margin="10,0,0,0" Height="24" Padding="5,0,0,0"
                                     VerticalContentAlignment="Center"/>
                        </DockPanel>
                    </StackPanel>

                </Expander>
                <Separator Margin="10,0,10,0" Background="#dfdfdf"/>
                <Expander Header="{DynamicResource Routes.Title}" IsExpanded="False" Margin="10px" Expanded="update_telemetry_status_lights">
                    <StackPanel Margin="10px">
                        <TextBlock TextWrapping="WrapWithOverflow">
                            <Run Text="{DynamicResource Routes.Description}" />
                            <LineBreak/>
                            <Hyperlink NavigateUri="https://www.notion.so/pyrevitlabs/pyRevit-Routes-HTTP-API-79ef6d4a77b04aca9be6f4e46ffa728e" Click="handle_url_click">
                                <Run Text="{DynamicResource Routes.Docs}" />
                            </Hyperlink>
                        </TextBlock>
                        <StackPanel>
                            <WrapPanel Margin="0,15,0,0">
                                <ToggleButton Style="{StaticResource AnimatedSwitch}" Height="24" x:Name="routes_cb" IsChecked="False"/>
                                <TextBlock Margin="30,4,0,0" FontWeight="Medium" Text="{DynamicResource Routes.Check}"/>
                            </WrapPanel>
                            <GroupBox Header="{DynamicResource Routes.RestAPI}" Padding="10" Margin="0,10,0,0">
                                <CheckBox x:Name="coreapi_cb">
                                    <CheckBox.Content>
                                        <TextBlock>
                                            <TextBlock FontFamily="Consolas" FontWeight="Black" Text="{DynamicResource Routes.RestAPI.Check}" />
                                            <LineBreak/>
                                            <Run Text="{DynamicResource Routes.RestAPI.Check.Description}"/>
                                            <LineBreak/>
                                            <Hyperlink NavigateUri="https://www.notion.so/pyrevitlabs/Runtime-REST-API-c3b96be059ba4af0ad5304d3e0304f3d" Click="handle_url_click">
                                                <Run Text="{DynamicResource Routes.RestAPI.Check.Docs}"/>
                                            </Hyperlink>
                                        </TextBlock>
                                    </CheckBox.Content>
                                </CheckBox>
                            </GroupBox>
                            <Border x:Name="routesserver_statusbox" Height="25" DockPanel.Dock="Top" Padding="10,0,10,0" Margin="0,10,0,0" Background="LightGray">
                                <TextBlock x:Name="routesserver_statusmsg" Foreground="White" VerticalAlignment="Center"/>
                            </Border>
                            <TextBlock x:Name="routes_exampleblock" DockPanel.Dock="Top" VerticalAlignment="Center" Foreground="DarkGray" Visibility="Collapsed">
                                    Example
                                    <LineBreak/>
                                    <TextBlock x:Name="routes_example" DockPanel.Dock="Top" VerticalAlignment="Center" Foreground="DarkGray" />
                            </TextBlock>
                        </StackPanel>
                    </StackPanel>
                </Expander>
                <Separator Margin="10,0,10,0" Background="#dfdfdf"/>
                <Expander Header="{DynamicResource Telemetry.Title}" IsExpanded="False" Margin="10px" Expanded="update_telemetry_status_lights">
                    <StackPanel Margin="10px">
                        <TextBlock TextWrapping="WrapWithOverflow" Text="{DynamicResource Telemetry.Description}"/>
                        <StackPanel >
                            <GroupBox Header="{DynamicResource Telemetry.Settings}" Padding="10" Margin="0,10,0,0">
                                <CheckBox x:Name="telemetry_timestamp_cb" Content="{DynamicResource Telemetry.Settings.UseUTC}" />
                            </GroupBox>
                            <WrapPanel Margin="0,15,0,0">
                                <ToggleButton Style="{StaticResource AnimatedSwitch}" Height="24" x:Name="telemetry_cb" IsChecked="False"/>
                                <TextBlock Margin="30,4,0,0" FontWeight="Medium" Text="{DynamicResource Telemetry.ScriptTelemetry}" />
                            </WrapPanel>
                            <GroupBox Header="{DynamicResource Telemetry.SendTelemetry}" Padding="10" Margin="0,10,0,0">
                                <WrapPanel>
                                    <CheckBox Content="{DynamicResource Telemetry.CommandBundles}" IsEnabled="False" IsChecked="True" />
                                    <CheckBox x:Name="telemetry_hooks_cb" Content="{DynamicResource Telemetry.Hooks}" Margin="15,0,0,0" />
                                </WrapPanel>
                            </GroupBox>
                            <DockPanel Margin="0,10,0,0" IsEnabled="{Binding ElementName=telemetry_cb, Path=IsChecked}">
                                <TextBlock DockPanel.Dock="Top" VerticalAlignment="Center" Text="{DynamicResource Telemetry.ServerUrl}" />
                                <TextBox x:Name="telemetryserver_tb" DockPanel.Dock="Top" FontFamily="Consolas" Margin="0,10,0,5" Height="24" Padding="5,0,0,0" VerticalContentAlignment="Center" TextChanged="telemetryserver_changed"/>
                                <TextBlock DockPanel.Dock="Bottom" VerticalAlignment="Center" Foreground="DarkGray">
                                    <Run Text="{DynamicResource Telemetry.ServerUrl.Example}"/>
                                    <LineBreak/>http://telemetry.mycompany.com:8080/api/v2/scripts/
                                </TextBlock>
                                <Border x:Name="telemetryserver_statusbox" MinHeight="25" Padding="10,0,10,0" Background="LightGray">
                                    <TextBlock x:Name="telemetryserver_statusmsg" Foreground="White"  VerticalAlignment="Center" MouseLeftButtonUp="update_telemetryserver_status_lights">
                                    </TextBlock>
                                </Border>
                            </DockPanel>
                            <TextBlock TextWrapping="WrapWithOverflow" Margin="0,15,0,0" Text="{DynamicResource Telemetry.ServerUrl.Description}"/>
                            <DockPanel Margin="0,10,0,0" IsEnabled="{Binding ElementName=telemetry_cb, Path=IsChecked}">
                                <TextBlock DockPanel.Dock="Top" VerticalAlignment="Center" Text="{DynamicResource Telemetry.JsonFile}"/>
                                <WrapPanel DockPanel.Dock="Right" Margin="0,10,0,0">
                                    <Button Content="{DynamicResource Telemetry.JsonFile.Button}" Width="{DynamicResource Telemetry.JsonFile.Button.Width}" Margin="6,0,0,0" Height="24"
                                            Click="open_telemetry_folder" ToolTip="{DynamicResource Telemetry.JsonFile.Button.ToolTip}"/>
                                </WrapPanel>
                                <TextBox x:Name="cur_telemetryfile_tb" FontFamily="Consolas" IsReadOnly="True"
                                         Margin="0,10,0,0" Height="24" Padding="5,0,0,0"
                                         VerticalContentAlignment="Center"/>
                            </DockPanel>
                            <DockPanel Margin="0,10,0,0" IsEnabled="{Binding ElementName=telemetry_cb, Path=IsChecked}">
                                <TextBlock DockPanel.Dock="top" VerticalAlignment="Center" Text="{DynamicResource Telemetry.DataFolder}" />
                                <WrapPanel DockPanel.Dock="Right" Margin="0,10,0,0">
                                    <Button Content="&#x25CF;&#x25CF;&#x25CF;"
                                            Width="48" Height="24" Margin="6,0,3,0" Padding="0,0,0,2"
                                            Click="pick_telemetry_folder" ToolTip="{DynamicResource Telemetry.DataFolder.Button.ToolTip}"/>
                                    <Button Content="{DynamicResource Telemetry.Reset.Button}" Width="{DynamicResource Telemetry.Reset.Button.Width}" Height="24" Margin="3,0,0,0" Click="reset_telemetry_folder" ToolTip="{DynamicResource Telemetry.Reset.Button.ToolTip}"/>
                                </WrapPanel>
                                <TextBox x:Name="telemetryfile_tb" FontFamily="Consolas"
                                         Margin="0,10,0,0" Height="24" Padding="5,0,0,0"
                                         VerticalContentAlignment="Center"/>
                            </DockPanel>
                            <WrapPanel Margin="0,25,0,0">
                                <ToggleButton Style="{StaticResource AnimatedSwitch}" Height="24" x:Name="apptelemetry_cb" IsChecked="False"/>
                                <TextBlock Margin="30,4,0,0" FontWeight="Medium" Text="{DynamicResource Telemetry.Application}"/>
                            </WrapPanel>
                            <TextBlock TextWrapping="WrapWithOverflow" Margin="0,15,0,0" Text="{DynamicResource Telemetry.Application.Description}"/>
                            <DockPanel Margin="0,10,0,0" IsEnabled="{Binding ElementName=apptelemetry_cb, Path=IsChecked}">
                                <TextBlock DockPanel.Dock="Top" VerticalAlignment="Center" Text="{DynamicResource Telemetry.Application.ServerUrl}"/>
                                <TextBox x:Name="apptelemetryserver_tb" DockPanel.Dock="Top" FontFamily="Consolas" Margin="0,10,0,5" Height="24" Padding="5,0,0,0" VerticalContentAlignment="Center" TextChanged="apptelemetryserver_changed"/>
                                <TextBlock DockPanel.Dock="Bottom" VerticalAlignment="Center" Foreground="DarkGray">
                                    <Run Text="{DynamicResource Telemetry.ServerUrl.Example}"/>
                                    <LineBreak/>http://telemetry.mycompany.com:8080/api/v2/events/
                                </TextBlock>
                                <Border x:Name="apptelemetryserver_statusbox" MinHeight="25" Padding="10,0,10,0" Background="LightGray">
                                    <TextBlock x:Name="apptelemetryserver_statusmsg" Foreground="White" VerticalAlignment="Center" MouseLeftButtonUp="update_apptelemetryserver_status_lights"/>
                                </Border>
                            </DockPanel>
                            <StackPanel x:Name="event_telemetry_sp" Margin="0,10,0,0" IsEnabled="{Binding ElementName=apptelemetry_cb, Path=IsChecked}">
                                <DockPanel>
                                    <Button DockPanel.Dock="Right" Content="{DynamicResource Telemetry.Application.ToggleAll}" Width="{DynamicResource Telemetry.Application.ToggleAll.Width}" Height="25" Click="toggle_event_cbs" ></Button>
                                    <TextBlock VerticalAlignment="Center" FontWeight="Medium" Text="{DynamicResource Telemetry.Events}"/>
                                </DockPanel>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </Expander>
                <Separator Margin="10,0,10,0" Background="#dfdfdf"/>
                <Expander Header="{DynamicResource SupportedRevitVersions.Title}" IsExpanded="False" Margin="10px">
                    <StackPanel Margin="10px">
                        <TextBlock x:Name="revitversions_tb" TextWrapping="WrapWithOverflow" Text="{DynamicResource SupportedRevitVersions.Description}"/>
                        <!--Link the list 'supported_revit_versions_CB' from python to the xaml-->
                        <ItemsControl ItemsSource="{Binding supported_revit_versions_CB}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox Content="{Binding Content}"
                                        IsChecked="{Binding IsChecked}"
                                        IsEnabled="{Binding IsEnabled}"
                                        Margin="0,10,0,0"
                                        Style="{StaticResource RevitCheckbox}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </Expander>
                <Separator Margin="10,0,10,0" Background="#dfdfdf"/>
                <Expander Header="{DynamicResource UI-UX.Title}" IsExpanded="False" Margin="10px">
                    <StackPanel Margin="10,10,10,0">
                        <TextBlock TextWrapping="WrapWithOverflow" Text="{DynamicResource UI-UX.Description}" />
                        <GroupBox Header="{DynamicResource UI-UX.RegionSettings}" Margin="0,10,0,0" Padding="10">
                            <StackPanel>
                                <DockPanel>
                                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,15,0" Text="{DynamicResource UI-UX.SelectLanguage}"/>
                                    <ComboBox x:Name="applocales_cb"/>
                                </DockPanel>
                                <TextBlock Margin="0,10,0,0">
                                    <Hyperlink NavigateUri="https://www.notion.so/pyrevitlabs/Help-Translate-pyRevit-c26063a6c9824667a07c6a40b28c70d4" Click="handle_url_click">
                                        <Run Text="{DynamicResource UI-UX.RegionSettingsLink}"/>
                                    </Hyperlink>
                                </TextBlock>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="{DynamicResource UI-UX.TabColoring}" Margin="0,10,0,0" Padding="10">
                            <StackPanel>
                                <TextBlock DockPanel.Dock="Top" Margin="0,0,0,5" FontWeight="Medium" Text="{DynamicResource UI-UX.ColoringStyle}" />
                                <CheckBox x:Name="colordocs_cb" Margin="0,5,0,0" Content="{DynamicResource UI-UX.ColorizeOpenDocuments}" IsChecked="False" IsEnabled="True" />
                                <StackPanel Margin="0,0,0,5" IsEnabled="{Binding ElementName=colordocs_cb, Path=IsChecked}">
                                    <CheckBox x:Name="sortdocs_cb" Content="{DynamicResource UI-UX.KeepOpenTabs}" IsChecked="False" IsEnabled="False" Checked="tabstyling_changed" Unchecked="tabstyling_changed" Margin="0,5,0,0"/>
                                </StackPanel>
                                <StackPanel Margin="0,10,0,0" IsEnabled="{Binding ElementName=colordocs_cb, Path=IsChecked}">
                                    <Grid Margin="10,10,10,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="5" />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <DockPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0">
                                            <Label Content="{DynamicResource UI-UX.ProjectTabStyle}" Width="{DynamicResource UI-UX.ProjectTabStyle.Width}" Padding="0,4" FontWeight="Medium"/>
                                            <ComboBox x:Name="project_tabstyle_cb" SelectionChanged="tabstyling_changed" DisplayMemberPath="Name"/>
                                        </DockPanel>
                                        <DockPanel Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="0">
                                            <Label Content="{DynamicResource UI-UX.FamilyTabStyle}" Width="{DynamicResource UI-UX.FamilyTabStyle.Width}" Padding="0,4" FontWeight="Medium"/>
                                            <ComboBox x:Name="family_tabstyle_cb" SelectionChanged="tabstyling_changed" DisplayMemberPath="Name"/>
                                        </DockPanel>
                                        <Border Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" BorderThickness="1,1,1,0" BorderBrush="LightGray" Height="10" Margin="0,5,0,5"/>
                                        <Border Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="1" BorderThickness="1,1,1,0" BorderBrush="LightGray" Height="10" Margin="0,5,0,5"/>
                                        <TabItem x:Name="tabProjA" Grid.Column="0" Grid.Row="2" Style="{StaticResource revitTab}" Header="{DynamicResource UI-UX.ProjectSample1}" />
                                        <TabItem x:Name="tabProjB" Grid.Column="1" Grid.Row="2" Style="{StaticResource revitTab}" Header="{DynamicResource UI-UX.ProjectSample2}" />
                                        <TabItem x:Name="tabFamilyA" Grid.Column="3" Grid.Row="2" Style="{StaticResource revitTab}" Header="{DynamicResource UI-UX.FamilySample1}" />
                                        <TabItem x:Name="tabFamilyB" Grid.Column="4" Grid.Row="2" Style="{StaticResource revitTab}" Header="{DynamicResource UI-UX.FamilySample2}" />
                                    </Grid>
                                </StackPanel>
                                <StackPanel Margin="0,10,0,10" IsEnabled="{Binding ElementName=colordocs_cb, Path=IsChecked}">
                                    <TextBlock Margin="0,0,0,5" FontWeight="Medium" Text="{DynamicResource UI-UX.ColoringTheme}" />
                                    <TextBlock Foreground="Gray" Margin="0,0,0,10" TextWrapping="Wrap">
                                        <Run Text="{DynamicResource UI-UX.ColoringTheme.Description1}"/>
                                        <LineBreak />
                                        <Run Text="{DynamicResource UI-UX.ColoringTheme.Description2}"/>
                                        <LineBreak />
                                        <Run Text="{DynamicResource UI-UX.ColoringTheme.Description3}"/>
                                        </TextBlock>
                                    <DockPanel>
                                        <Grid DockPanel.Dock="Right" Margin="5,0,0,0" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="26" />
                                                <ColumnDefinition Width="31" />
                                                <ColumnDefinition Width="{DynamicResource UI-UX.ColoringTheme.Reset.Width}" />
                                                <ColumnDefinition Width="{DynamicResource UI-UX.ColoringTheme.Reset.Width2}" />
                                            </Grid.ColumnDefinitions>
                                            <Button Grid.Column="0" Width="26" Content="+" Padding="0,-3,0,0" FontSize="14" Background="White" BorderBrush="DarkGray" Click="add_ordercolor" />
                                            <Button Grid.Column="1" Width="26" Margin="5,0,0,0" Content="-" Padding="0,-3,0,0" FontSize="14" Background="White" BorderBrush="DarkGray" Click="remove_ordercolor" />
                                            <Button Grid.Column="2" Margin="5,0,0,0" Content="{DynamicResource UI-UX.ColoringTheme.Reset}" Padding="0,-3,0,0" Background="White" BorderBrush="DarkGray" Click="reset_ordercolors" />
                                        </Grid>
                                        <TextBlock DockPanel.Dock="Left" Text="{DynamicResource UI-UX.ColoringTheme.ByOrder}" VerticalAlignment="Center" Margin="0,0,10,0" Width="{DynamicResource UI-UX.ColoringTheme.ByOrder.Width}" />
                                        <ListView x:Name="doc_ordercolor_lb"
                                                  MinHeight="26" Background="Transparent"
                                                  ItemsPanel="{StaticResource swatchPanel}"
                                                  ItemContainerStyle="{StaticResource swatchPanelItem}"
                                                  SelectionChanged="selected_ordercolor_changed"
                                                  MouseDoubleClick="doc_ordercolor_changecolor"
                                                  />
                                    </DockPanel>
                                    <DockPanel Margin="0,10,0,0">
                                        <Grid DockPanel.Dock="Right" Margin="5,0,0,0" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="26" />
                                                <ColumnDefinition Width="31" />
                                                <ColumnDefinition Width="{DynamicResource UI-UX.ColoringTheme.FilterRegex.Width}" />
                                                <ColumnDefinition Width="{DynamicResource UI-UX.ColoringTheme.FilterRegex.Width2}" />
                                            </Grid.ColumnDefinitions>
                                            <Button Grid.Column="0" Width="26" Margin="0,0,0,0" Content="+" Padding="0,-3,0,0" FontSize="14" Background="White" BorderBrush="DarkGray" Click="add_filtercolor" />
                                            <Button Grid.Column="1" Width="26" Margin="5,0,0,0" Content="-" Padding="0,-3,0,0" FontSize="14" Background="White" BorderBrush="DarkGray" Click="remove_filtercolor" />
                                            <Label Grid.Column="2" Content="{DynamicResource UI-UX.ColoringTheme.FilterRegex}" HorizontalAlignment="Right" />
                                            <TextBox x:Name="filtercolor_filter_tb" TextChanged="filtercolor_filter_changed" Grid.Column="3" Margin="5,0,0,0" MinHeight="26" VerticalContentAlignment="Center"/>
                                            <Ellipse x:Name="filtercolor_filter_warn" Visibility="Hidden" ToolTip="Bad Regex" Grid.Column="3" Fill="Red" Width="8" Height="8" HorizontalAlignment="Right" Margin="0,0,8,0" />
                                        </Grid>
                                        <TextBlock DockPanel.Dock="Left" Text="{DynamicResource UI-UX.ColoringTheme.ByFilter}" VerticalAlignment="Center" Margin="0,0,10,0" Width="{DynamicResource UI-UX.ColoringTheme.ByFilter.Width}" />
                                        <ListView x:Name="doc_filtercolor_lb"
                                                  MinHeight="26" Background="Transparent"
                                                  ItemsPanel="{StaticResource swatchPanel}"
                                                  ItemContainerStyle="{StaticResource swatchPanelItem}"
                                                  SelectionChanged="selected_filtercolor_changed"
                                                  MouseDoubleClick="doc_filtercolor_changecolor"
                                                  />
                                    </DockPanel>
                                </StackPanel>
                                <TextBlock Foreground="#ffffff" Margin="0,10,0,0">
                                        <Hyperlink NavigateUri="https://www.parallaxteam.com/apps/" Click="handle_url_click">
                                           <Run Text="{DynamicResource UI-UX.ColoringTheme.Parallax}"/>
                                        </Hyperlink>
                                </TextBlock>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="{DynamicResource UI-UX.OutputWindow}" Margin="0,10,0,0" Padding="10">
                            <StackPanel>
                                <DockPanel Margin="0,10,0,10">
                                    <TextBlock DockPanel.Dock="Top" VerticalAlignment="Center" Text="{DynamicResource UI-UX.OutputStyling}"/>
                                    <WrapPanel DockPanel.Dock="Right" Margin="0,10,0,0">
                                        <Button Content="&#x25CF;&#x25CF;&#x25CF;" Width="48" Margin="6,0,3,0" Height="24" Padding="0,0,0,2" Click="pick_stylesheet" ToolTip="{DynamicResource UI-UX.PickCssToolTip}"/>
                                        <Button Content="{DynamicResource UI-UX.ResetCss}" Width="{DynamicResource UI-UX.ResetCss.Width}" Margin="3,0,0,0" Height="24" Click="reset_stylesheet" ToolTip="{DynamicResource UI-UX.ResetCssToolTip}"/>
                                    </WrapPanel>
                                    <TextBox x:Name="cur_stylesheet_tb" FontFamily="Consolas"  Margin="0,10,0,0" Height="24" Padding="5,0,0,0" VerticalContentAlignment="Center"/>
                                </DockPanel>
                                <CheckBox x:Name="loadtooltipex_cb" Content="{DynamicResource UI-UX.AddToolDebug}" IsChecked="False" IsEnabled="True"/>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </Expander>
                <Separator Margin="10,0,10,0" Background="#dfdfdf"/>
                <Expander Header="{DynamicResource Extensions.Title}" IsExpanded="True" Margin="10px">
                    <StackPanel Margin="10px">
                        <TextBlock TextWrapping="WrapWithOverflow" Text="{DynamicResource Extensions.Description}"/>
                        <TextBlock TextWrapping="WrapWithOverflow" Margin="0,10,0,0" Text="{DynamicResource Extensions.Info}"/>
                        <DockPanel HorizontalAlignment="Stretch" Margin="0,10,0,0" Height="120px">
                            <StackPanel MinWidth="120px" MaxWidth="220px" Width="150" DockPanel.Dock="Right">
                                <Button Content="{DynamicResource Extensions.Button.Add}" Click="addfolder" Margin="0,0,0,5" Height="24"/>
                                <Button Content="{DynamicResource Extensions.Button.Remove}" Click="removefolder" Margin="0,0,0,5" Height="24"/>
                                <Button Content="{DynamicResource Extensions.Button.RemoveAll}" Click="removeallfolders" Margin="0,0,0,5" Height="24"/>
                                <Button Content="{DynamicResource Extensions.Button.Reveal}" Click="openextfolder" Margin="0,0,0,5" Height="24"/>
                            </StackPanel>
                            <ListBox x:Name="extfolders_lb" Margin="0,0,10,0" FontFamily="Consolas">
                            </ListBox>
                        </DockPanel>
                    </StackPanel>
                </Expander>
                <!-- <GroupBox Header="{DynamicResource Settings.Title}" Margin="10px">
                    <StackPanel>
                        <Button Content="{DynamicResource Settings.Import}" IsEnabled="False" HorizontalAlignment="Right" Width="200px" Margin="0,10,10,0"/>
                        <Button Content="{DynamicResource Settings.Export}" IsEnabled="False" HorizontalAlignment="Right" Width="200px" Margin="0,5,10,10"/>
                    </StackPanel>
                </GroupBox> -->
            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</Window>
